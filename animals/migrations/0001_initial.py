# Generated by Django 5.1.3 on 2024-11-10 22:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('adopter', 'Adotante')], default='adopter', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdopterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('street_name', models.CharField(max_length=255)),
                ('street_number', models.CharField(max_length=10)),
                ('complement', models.CharField(blank=True, max_length=255)),
                ('neighborhood', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=10)),
                ('residence_type', models.CharField(choices=[('HOUSE', 'Casa'), ('APARTMENT', 'Apartamento'), ('FARM', 'Fazenda')], default='HOUSE', max_length=10)),
                ('has_screens', models.BooleanField(default=False)),
                ('number_of_residents', models.IntegerField(default=1)),
                ('has_children', models.BooleanField(default=False)),
                ('has_allergic_residents', models.BooleanField(default=False)),
                ('has_other_pets', models.BooleanField(default=False)),
                ('number_of_pets', models.IntegerField(default=0)),
                ('adoption_motivation', models.TextField(blank=True)),
                ('acknowledges_costs', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('species', models.CharField(max_length=100, verbose_name='Espécie')),
                ('breed', models.CharField(blank=True, max_length=100, verbose_name='Raça')),
                ('gender', models.CharField(choices=[('M', 'Macho'), ('F', 'Fêmea')], max_length=1, verbose_name='Gênero')),
                ('age_estimated', models.IntegerField(verbose_name='Idade Estimada')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Peso (kg)')),
                ('status', models.CharField(choices=[('available', 'Disponível'), ('adopted', 'Adotado'), ('under_treatment', 'Em tratamento'), ('quarantine', 'Em quarentena')], default='available', max_length=20, verbose_name='Status')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('vaccinated', models.BooleanField(default=False, verbose_name='Vacinado')),
                ('neutered', models.BooleanField(default=False, verbose_name='Castrado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='animal_images/', verbose_name='Imagem')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animals_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Animal',
                'verbose_name_plural': 'Animais',
                'ordering': ['-created_at'],
            },
        ),
    ]
